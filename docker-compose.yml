version: "2.1"

services:
  # Elasticsearch container
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - "ES_JAVA_OPTS=-Xms${ES_JVM_HEAP} -Xmx${ES_JVM_HEAP}"
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - es-data:/usr/share/elasticsearch/data
    ports:
      # Port 9200 is available on the host. Need to for user to access as well as Packetbeat
      - 9200:9200
    # Healthcheck to confirm availability of ES. Other containers wait on this.
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:${ES_PASSWORD}", "http://localhost:9200/_cat/health"]
    # Internal network for the containers
    networks:
      - stock-trading-net

  # Kibana container
  kibana:
    container_name: kibana
    hostname: kibana
    image: "docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}"
    environment:
      - "ELASTICSEARCH_PASSWORD=${ES_PASSWORD}"
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    ports:
      # Port 5601 accessible on the host
      - 5601:5601
    # We don't start Kibana until the ES instance is ready
    depends_on:
      elasticsearch: { condition: service_healthy }
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
      retries: 6
    networks:
      - stock-trading-net

volumes:
  # Elasticsearch data
  es-data:
    driver: local

networks:
  stock-trading-net:
